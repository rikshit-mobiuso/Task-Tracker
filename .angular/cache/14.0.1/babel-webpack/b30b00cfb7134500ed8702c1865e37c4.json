{"ast":null,"code":"import { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n\nconst axios = require('axios').default; // import axios, { Axios } from 'axios';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let TaskService = /*#__PURE__*/(() => {\n  class TaskService {\n    // private apiUrl = \"https://628dd438a339dfef87a11484.mockapi.io/api/v1/task\"\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:5000/tasks';\n    }\n\n    getTasks() {\n      return this.http.get(this.apiUrl).pipe(catchError(this.handleError)); // axios.get(this.apiUrl)\n      // .then((response) => {\n      //   return response;\n      // })\n      // .catch((error) => {\n      //   console.log(error);\n      // }).pipe(catchError(this.handleError))\n    }\n\n    deleteTask(task) {\n      const url = `${this.apiUrl}/${task.id}`;\n      return this.http.delete(url).pipe(catchError(this.handleError));\n    }\n\n    updateTaskReminder(task) {\n      const url = `${this.apiUrl}/${task.id}`;\n      return this.http.put(url, task, httpOptions).pipe(catchError(this.handleError));\n    }\n\n    addTask(task) {\n      return this.http.post(this.apiUrl, task, httpOptions).pipe(catchError(this.handleError));\n    }\n\n    handleError(err) {\n      if (err instanceof HttpErrorResponse) {\n        console.log(err);\n      } else {\n        console.log(err);\n      }\n\n      return throwError(err);\n    }\n\n  }\n\n  TaskService.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: 'root'\n  });\n  return TaskService;\n})();","map":null,"metadata":{},"sourceType":"module"}