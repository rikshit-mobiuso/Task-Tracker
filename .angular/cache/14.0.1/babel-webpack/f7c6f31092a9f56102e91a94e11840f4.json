{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/ui.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction AddTaskComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function AddTaskComponent_form_0_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 2)(2, \"label\", 3);\n    i0.ɵɵtext(3, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.text = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 2)(6, \"label\", 5);\n    i0.ɵɵtext(7, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.date = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 7);\n    i0.ɵɵtext(11, \"Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.time = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 9)(14, \"label\", 10);\n    i0.ɵɵtext(15, \"Set Reminder\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AddTaskComponent_form_0_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.reminder = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(17, \"input\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.text);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.date);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.time);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.reminder);\n  }\n}\n\nexport let AddTaskComponent = /*#__PURE__*/(() => {\n  class AddTaskComponent {\n    constructor(uiService) {\n      this.uiService = uiService;\n      this.onAddTask = new EventEmitter();\n      this.reminder = false;\n      this.subscription = this.uiService.onToggle().subscribe(value => this.showAddTask = value);\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n    onSubmit() {\n      if (!this.text) {\n        alert('Please add a task!');\n        return;\n      }\n\n      const newTask = {\n        text: this.text,\n        date: this.date,\n        time: this.time,\n        reminder: this.reminder\n      };\n      this.onAddTask.emit(newTask);\n      this.text = '';\n      this.date = null;\n      this.time = null;\n      this.reminder = false;\n    }\n\n  }\n\n  AddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n    return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.UiService));\n  };\n\n  AddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTaskComponent,\n    selectors: [[\"app-add-task\"]],\n    outputs: {\n      onAddTask: \"onAddTask\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"add-form\", 3, \"ngSubmit\", 4, \"ngIf\"], [1, \"add-form\", 3, \"ngSubmit\"], [1, \"form-control\"], [\"for\", \"text\"], [\"type\", \"text\", \"name\", \"text\", \"id\", \"text\", \"placeholder\", \"Add Task\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"day\"], [\"type\", \"date\", \"name\", \"date\", \"id\", \"date\", \"placeholder\", \"Add Date\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"time\"], [\"type\", \"time\", \"name\", \"time\", \"id\", \"time\", \"placeholder\", \"Add Time\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-control\", \"form-control-check\"], [\"for\", \"reminder\"], [\"type\", \"checkbox\", \"name\", \"reminder\", \"id\", \"reminder\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"value\", \"Save Task\", 1, \"btn\", \"btn-block\"]],\n    template: function AddTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AddTaskComponent_form_0_Template, 18, 4, \"form\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.showAddTask);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\".add-form[_ngcontent-%COMP%]{margin-bottom:40px}\"]\n  });\n  return AddTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}